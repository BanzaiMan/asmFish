version: 3.0.{build}
pull_requests:
  do_not_increment_build_number: true
platform: Any CPU
clone_folder: C:\Projects\asmFish
environment:
  nuget_user: doublebeep7@gmail.com
  nuget_password:
    secure: tgMKHKjoECZJvbF81E9C1g==
nuget:
  account_feed: true
  project_feed: true
- cmd: >-
    @echo off cls for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value') do set "dt=%%a" set "YY=%dt:~2,2%" & set "YYYY=%dt:~0,4%" & set "MM=%dt:~4,2%" & set "DD=%dt:~6,2%"
    set "HH=%dt:~8,2%" & set "Min=%dt:~10,2%" & set "Sec=%dt:~12,2%"
    set "datestamp=%YYYY%-%MM%-%DD%" & set "timestamp=%HH%%Min%%Sec%" & set "fullstamp=%YYYY%-%MM%-%DD%_%HH%%Min%%Sec%"
    set t0=%time: =0%
    ECHO === Building Windows Executables ===
    cd WindowsOS_binaries
    if exist *bmi2.exe del *bmi2.exe
    if exist *popcnt.exe del *popcnt.exe
    cd ..
    set include=x86\include\
    fasmg.exe "x86\fish.asm" "asmFishW_%datestamp%_popcnt.exe" -e 1000 -i "VERSION_OS='W'" -i "PEDANTIC = 1" -i "VERSION_POST = 'popcnt'" %debug%
    fasmg.exe "x86\fish.asm" "asmFishW_%datestamp%_bmi2.exe" -e 1000 -i "VERSION_OS='W'" -i "PEDANTIC = 1" -i "VERSION_POST = 'bmi2'" %debug%
    cd LinuxOS_binaries
    if exist asm* del asm*
    cd ..
    ECHO === Building Linux Executables ===
    fasmg.exe "x86\fish.asm" "asmFishL_%datestamp%_popcnt" -e 1000 -i "VERSION_OS='L'" -i "PEDANTIC = 1" -i "VERSION_POST = 'popcnt'" %debug%
    fasmg.exe "x86\fish.asm" "asmFishL_%datestamp%_bmi2" -e 1000 -i "VERSION_OS='L'" -i "PEDANTIC = 1" -i "VERSION_POST = 'bmi2'" %debug%
    cd MacOS_binaries
    if exist asm* del asm*
    cd ..
    ECHO === Building MacOS Executables ===
    fasmg.exe "x86\fish.asm" "asmFishX_%datestamp%_popcnt" -e 1000 -i "VERSION_OS='X'" -i "PEDANTIC = 1" -i "VERSION_POST = 'popcnt'" %debug%
    fasmg.exe "x86\fish.asm" "asmFishX_%datestamp%_bmi2" -e 1000 -i "VERSION_OS='X'" -i "PEDANTIC = 1" -i "VERSION_POST = 'bmi2'" %debug%
    cd LinuxOS_binaries
    if exist arm* del arm*
    cd ..
    set include=arm\include\
    ECHO === Building ARM Executable ===
    fasmg.exe "arm\fish.arm" "armFishL_%datestamp%_v8" -e 1000 -i "VERSION_OS='L'" -i "PEDANTIC = 1" -i "VERSION_POST = 'v8'" %debug%
    cd Matefinder_binaries
    if exist mateFishW* del mateFishW*
    if exist *base del *base
    cd ..
    set include=x86\include\
    ECHO === Building Windows Matefinder Executables ===
    fasmg.exe "x86\fish.asm" "mateFishW_%datestamp%_popcnt.exe" -e 1000 -i "VERSION_OS='W'" -i "VERSION_POST = 'popcnt'" -i "USE_MATEFINDER = 1" %debug%
    fasmg.exe "x86\fish.asm" "mateFishW_%datestamp%_bmi2.exe" -e 1000 -i "VERSION_OS='W'" -i "VERSION_POST = 'bmi2'" -i "USE_MATEFINDER = 1" %debug%
    cd Matefinder_binaries
    if exist mateFishL* del mateFishL*
    cd ..
    ECHO === Building Linux Matefinder Executables ===
    fasmg.exe "x86\fish.asm" "mateFishL_%datestamp%_bmi2" -e 1000 -i "VERSION_OS='L'" -i "VERSION_POST = 'bmi2'" -i "USE_MATEFINDER = 1" %debug%
    fasmg.exe "x86\fish.asm" "mateFishL_%datestamp%_popcnt" -e 1000 -i "VERSION_OS='L'" -i "VERSION_POST = 'popcnt'" -i "USE_MATEFINDER = 1" %debug%
    set include=arm\include\
    start /min fasmg.exe "arm\fish.arm" "mateFishL_%datestamp%_v8" -e 1000 -i "VERSION_OS='L'" -i "VERSION_POST = 'v8'" -i "USE_MATEFINDER = 1" %debug%
    cd Matefinder_binaries
    if exist mateFishX* del mateFishX*
    cd ..
    ECHO === Building MacOS Matefinder Executables ===
    fasmg.exe "x86\fish.asm" "mateFishX_%datestamp%_bmi2" -e 1000 -i "VERSION_OS='X'" -i "VERSION_POST = 'bmi2'" -i "USE_MATEFINDER = 1" %debug%
    fasmg.exe "x86\fish.asm" "mateFishX_%datestamp%_popcnt" -e 1000 -i "VERSION_OS='X'" -i "VERSION_POST = 'popcnt'" -i "USE_MATEFINDER = 1" %debug%
    cd WindowsOS_binaries
    if exist *base.exe del *base.exe
    cd ..
    ECHO === Building Windows Base Executables ===
    fasmg.exe "x86\fish.asm" "asmFishW_%datestamp%_base.exe" -e 1000 -i "VERSION_OS='W'" -i "PEDANTIC = 1" -i "VERSION_POST = 'base'" %debug%
    fasmg.exe "x86\fish.asm" "mateFishW_%datestamp%_base.exe" -e 1000 -i "VERSION_OS='W'" -i "PEDANTIC = 1" -i "VERSION_POST = 'base'" -i "USE_MATEFINDER = 1" %debug%
    cd LinuxOS_binaries
    if exist *base del *base
    cd ..
    ECHO === Building Linux Base Executables ===
    fasmg.exe "x86\fish.asm" "asmFishL_%datestamp%_base" -e 1000 -i "VERSION_OS='L'" -i "PEDANTIC = 1" -i "VERSION_POST = 'base'" %debug%
    fasmg.exe "x86\fish.asm" "mateFishL_%datestamp%_base" -e 1000 -i "VERSION_OS='L'" -i "PEDANTIC = 1" -i "VERSION_POST = 'base'" -i "USE_MATEFINDER = 1" %debug%
    cd MacOS_binaries
    if exist *base del *base
    cd ..
    ECHO === Building MacOS Base Executables ===
    fasmg.exe "x86\fish.asm" "asmFishX_%datestamp%_base" -e 1000 -i "VERSION_OS='X'" -i "PEDANTIC = 1" -i "VERSION_POST = 'base'" %debug%
    fasmg.exe "x86\fish.asm" "mateFishX_%datestamp%_base" -e 1000 -i "VERSION_OS='X'" -i "PEDANTIC = 1" -i "VERSION_POST = 'base'" -i "USE_MATEFINDER = 1" %debug%
    timeout 5
    move asmFishW_%datestamp%* WindowsOS_binaries
    move asmFishL_%datestamp%* LinuxOS_binaries
    move asmFishX_%datestamp%* MacOS_binaries
    move mateFish* Matefinder_binaries
    move armFishL_%datestamp%_v8 LinuxOS_binaries
    set t=%time: =0%
    set /a h=1%t0:~0,2%-100
    set /a m=1%t0:~3,2%-100
    set /a s=1%t0:~6,2%-100
    set /a c=1%t0:~9,2%-100
    set /a starttime = %h% * 360000 + %m% * 6000 + 100 * %s% + %c%
    set /a h=1%t:~0,2%-100
    set /a m=1%t:~3,2%-100
    set /a s=1%t:~6,2%-100
    set /a c=1%t:~9,2%-100
    set /a endtime = %h% * 360000 + %m% * 6000 + 100 * %s% + %c%
    set /a runtime = %endtime% - %starttime%
    echo Build time: %runtime:~0,-2%.%runtime:~-2% seconds 
    
    exit /b
test_script:
- cmd: >-
    cd WindowsOS_binaries
            asmFishW_%datestamp%_bmi2.exe bench
            asmFishW_%datestamp%_popcnt.exe bench
            asmFishW_%datestamp%_base.exe bench
            cd..
artifacts:
- path: WindowsOS_binaries
  name: Windows
- path: Matefinder_binaries
  name: Matefinder
- path: LinuxOS_binaries
  name: Linux
- path: MacOS_binaries
  name: Mac
