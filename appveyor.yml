version: 2.0.{build}
pull_requests:
  do_not_increment_build_number: true
branches:
  only:
  - master
platform: Any CPU
clone_folder: C:\Users\dvg\Appveyor
environment:
  nuget_user: doublebeep7@gmail.com
  nuget_password:
    secure: tgMKHKjoECZJvbF81E9C1g==
nuget:
  account_feed: true
  project_feed: true
build_script:
- cmd: "@echo off\ncls\n\nfor /f \"tokens=2 delims==\" %%a in ('wmic OS Get localdatetime /value') do set \"dt=%%a\"\nset \"YY=%dt:~2,2%\" & set \"YYYY=%dt:~0,4%\" & set \"MM=%dt:~4,2%\" & set \"DD=%dt:~6,2%\"\nset \"HH=%dt:~8,2%\" & set \"Min=%dt:~10,2%\" & set \"Sec=%dt:~12,2%\"\nset \"datestamp=%YYYY%-%MM%-%DD%\" & set \"timestamp=%HH%%Min%%Sec%\" & set \"fullstamp=%YYYY%-%MM%-%DD%_%HH%%Min%%Sec%\"\n\nset t0=%time: =0%\nECHO === Building Windows Executables ===\ncd WindowsOS_binaries\nif exist *bmi2.exe del *bmi2.exe\nif exist *popcnt.exe del *popcnt.exe\ncd ..\nset include=x86\\include\\\nfasmg.exe \"x86\\fish.asm\" \"asmFishW_%datestamp%_popcnt.exe\" -e 1000 -i \"VERSION_OS='W'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'popcnt'\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"asmFishW_%datestamp%_bmi2.exe\" -e 1000 -i \"VERSION_OS='W'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'bmi2'\" %debug%\necho.\n\n \ncd LinuxOS_binaries\nif exist asm* del asm*\ncd ..\nset include=x86\\include\\\nECHO === Building Linux Executables ===\nfasmg.exe \"x86\\fish.asm\" \"asmFishL_%datestamp%_popcnt\" -e 1000 -i \"VERSION_OS='L'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'popcnt'\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"asmFishL_%datestamp%_bmi2\" -e 1000 -i \"VERSION_OS='L'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'bmi2'\" %debug%\necho.\n\n \n\ncd MacOS_binaries\nif exist asm* del asm*\ncd ..\nset include=x86\\include\\\nECHO === Building MacOS Executables ===\nfasmg.exe \"x86\\fish.asm\" \"asmFishX_%datestamp%_popcnt\" -e 1000 -i \"VERSION_OS='X'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'popcnt'\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"asmFishX_%datestamp%_bmi2\" -e 1000 -i \"VERSION_OS='X'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'bmi2'\" %debug%\necho.\n \n \n\ncd LinuxOS_binaries\nif exist arm* del arm*\ncd ..\nset include=arm\\include\\\nECHO === Building ARM Executable ===\nfasmg.exe \"arm\\fish.arm\" \"armFishL_%datestamp%_v8\" -e 1000 -i \"VERSION_OS='L'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'v8'\" %debug%\necho.\n\n \n \n\ncd Matefinder_binaries\nif exist mateFishW* del mateFishW*\nif exist *base del *base\ncd ..\nset include=x86\\include\\\nECHO === Building Windows Matefinder Executables ===\nfasmg.exe \"x86\\fish.asm\" \"mateFishW_%datestamp%_popcnt.exe\" -e 1000 -i \"VERSION_OS='W'\" -i \"VERSION_POST = 'popcnt'\" -i \"USE_MATEFINDER = 1\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"mateFishW_%datestamp%_bmi2.exe\" -e 1000 -i \"VERSION_OS='W'\" -i \"VERSION_POST = 'bmi2'\" -i \"USE_MATEFINDER = 1\" %debug%\necho.\n\n\ncd Matefinder_binaries\nif exist mateFishL* del mateFishL*\ncd ..\nset include=x86\\include\\\nECHO === Building Linux Matefinder Executables ===\nfasmg.exe \"x86\\fish.asm\" \"mateFishL_%datestamp%_bmi2\" -e 1000 -i \"VERSION_OS='L'\" -i \"VERSION_POST = 'bmi2'\" -i \"USE_MATEFINDER = 1\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"mateFishL_%datestamp%_popcnt\" -e 1000 -i \"VERSION_OS='L'\" -i \"VERSION_POST = 'popcnt'\" -i \"USE_MATEFINDER = 1\" %debug%\nset include=arm\\include\\\nstart /min fasmg.exe \"arm\\fish.arm\" \"mateFishL_%datestamp%_v8\" -e 1000 -i \"VERSION_OS='L'\" -i \"VERSION_POST = 'v8'\" -i \"USE_MATEFINDER = 1\" %debug%\necho.\n\n\nset include=x86\\include\\\ncd Matefinder_binaries\nif exist mateFishX* del mateFishX*\ncd ..\nECHO === Building MacOS Matefinder Executables ===\nfasmg.exe \"x86\\fish.asm\" \"mateFishX_%datestamp%_bmi2\" -e 1000 -i \"VERSION_OS='X'\" -i \"VERSION_POST = 'bmi2'\" -i \"USE_MATEFINDER = 1\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"mateFishX_%datestamp%_popcnt\" -e 1000 -i \"VERSION_OS='X'\" -i \"VERSION_POST = 'popcnt'\" -i \"USE_MATEFINDER = 1\" %debug%\necho.\n\n\ncd WindowsOS_binaries\nif exist *base.exe del *base.exe\ncd ..\nset include=x86\\include\\\nECHO === Building Windows Base Executables ===\nfasmg.exe \"x86\\fish.asm\" \"asmFishW_%datestamp%_base.exe\" -e 1000 -i \"VERSION_OS='W'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'base'\" %debug%\necho.\nfasmg.exe \"x86\\fish.asm\" \"mateFishW_%datestamp%_base.exe\" -e 1000 -i \"VERSION_OS='W'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'base'\" -i \"USE_MATEFINDER = 1\" %debug%\n\n\ncd LinuxOS_binaries\nif exist *base del *base\ncd ..\nset include=x86\\include\\\nECHO === Building Linux Base Executables ===\nfasmg.exe \"x86\\fish.asm\" \"asmFishL_%datestamp%_base\" -e 1000 -i \"VERSION_OS='L'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'base'\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"mateFishL_%datestamp%_base\" -e 1000 -i \"VERSION_OS='L'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'base'\" -i \"USE_MATEFINDER = 1\" %debug%\necho.\n\n\ncd MacOS_binaries\nif exist *base del *base\ncd ..\nset include=x86\\include\\\nECHO === Building MacOS Base Executables ===\nfasmg.exe \"x86\\fish.asm\" \"asmFishX_%datestamp%_base\" -e 1000 -i \"VERSION_OS='X'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'base'\" %debug%\nfasmg.exe \"x86\\fish.asm\" \"mateFishX_%datestamp%_base\" -e 1000 -i \"VERSION_OS='X'\" -i \"PEDANTIC = 1\" -i \"VERSION_POST = 'base'\" -i \"USE_MATEFINDER = 1\" %debug%\necho.\n\n\ntimeout 5\n\ncopy asmFishW_%datestamp%* WindowsOS_binaries\ncopy asmFishL_%datestamp%* LinuxOS_binaries\ncopy asmFishX_%datestamp%* MacOS_binaries\ncopy mateFish* Matefinder_binaries\ncopy armFishL_%datestamp%_v8 LinuxOS_binaries\n\n\nset t=%time: =0%\nset /a h=1%t0:~0,2%-100\nset /a m=1%t0:~3,2%-100\nset /a s=1%t0:~6,2%-100\nset /a c=1%t0:~9,2%-100\nset /a starttime = %h% * 360000 + %m% * 6000 + 100 * %s% + %c%\nset /a h=1%t:~0,2%-100\nset /a m=1%t:~3,2%-100\nset /a s=1%t:~6,2%-100\nset /a c=1%t:~9,2%-100\nset /a endtime = %h% * 360000 + %m% * 6000 + 100 * %s% + %c%\nset /a runtime = %endtime% - %starttime%\necho Build time: %runtime:~0,-2%.%runtime:~-2% seconds\n\nexit /b"
test_script:
- cmd: >-
    cd WindowsOS_binaries
            asmFishW_%datestamp%_bmi2.exe bench
            asmFishW_%datestamp%_popcnt.exe bench
            asmFishW_%datestamp%_base.exe bench
            cd..
artifacts:
- path: WindowsOS_binaries\asmFishW_%datestamp%_base.exe
  name: Windows_base
- path: WindowsOS_binaries\asmFishW_%datestamp%_popcnt.exe
  name: Windows_popcnt
- path: WindowsOS_binaries\asmFishW_%datestamp%_bmi2.exe
  name: Windows_bmi2

- path: Matefinder_binaries\mateFishW_%datestamp%_base.exe
  name: MatefinderW_base
- path: Matefinder_binaries\mateFishW_%datestamp%_bmi2.exe
  name: MatefinderW_bmi2
- path: Matefinder_binaries\mateFishW_%datestamp%_popcnt.exe
  name: MatefinderW_popcnt

- path: Matefinder_binaries\mateFishL_%datestamp%_base
  name: MatefinderL_base
- path: Matefinder_binaries\mateFishL_%datestamp%_popcnt
  name: MatefinderL_popcnt
- path: Matefinder_binaries\mateFishL_%datestamp%_bmi2
  name: MatefinderL_bmi2

- path: Matefinder_binaries\mateFishX_%datestamp%_base
  name: MatefinderX_base
- path: Matefinder_binaries\mateFishX_%datestamp%_bmi2
  name: MatefinderX_bmi2
- path: Matefinder_binaries\mateFishX_%datestamp%_popcnt
  name: MatefinderX_popcnt

- path: Matefinder_binaries\mateFishL_%datestamp%_v8
  name: arm/mateFish_v8

- path: MacOS_binaries\asmFishX_%datestamp%_popcnt
  name: asmFishX_popcnt
- path: MacOS_binaries\asmFishX_%datestamp%_base
  name: asmFishX_base
- path: MacOS_binaries\asmFishX_%datestamp%_bmi2
  name: asmFishX_bmi2

- path: LinuxOS_binaries\asmFishL_%datestamp%_popcnt
  name: asmFishL_popcnt
- path: LinuxOS_binaries\asmFishL_%datestamp%_bmi2
  name: asmFishL_bmi2
- path: LinuxOS_binaries\asmFishL_%datestamp%_base
  name: asmFishL_base

- path: LinuxOS_binaries\armFishL_%datestamp%_v8
  name: armFishL_v8
